if(IN_DOCKER)
  find_package(GTest REQUIRED)
  find_package(gflags REQUIRED)
  find_package(glog REQUIRED)
  find_package(ogdf REQUIRED)
  find_package(Protobuf REQUIRED)
  find_package(ONNX REQUIRED)
  find_package(nlohmann_json REQUIRED)
  find_package(magic_enum REQUIRED)
  find_package(Graphviz REQUIRED)
  set(THIRD_PARTY_DEFINE
    ${THIRD_PARTY_DEFINE}
    "-DONNX_ML=1"
    "-DONNX_NAMESPACE=onnx"
    PARENT_SCOPE)
else()
  if (NOT TARGET ogdf)
    add_subdirectory(ogdf EXCLUDE_FROM_ALL)
  endif()
  if (NOT TARGET gvc)
    set(enable_ltdl OFF)
    set(with_expat OFF)
    set(with_digcola OFF)
    set(with_gvedit OFF)
    set(with_ortho OFF)
    set(with_sfdp OFF)
    set(use_win_pre_inst_libs OFF)
    if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
      set(BISON_EXECUTABLE "/opt/homebrew/opt/bison/bin/bison")
    endif()
    add_subdirectory(graphviz EXCLUDE_FROM_ALL)
  endif()
  if (NOT TARGET protobuf)
    set(protobuf_BUILD_SHARED_LIBS OFF)
    set(protobuf_BUILD_TESTS OFF)
    add_subdirectory(protobuf EXCLUDE_FROM_ALL)
  endif()
  if (NOT TARGET nlohmann-json)
  add_subdirectory(nlohmann-json EXCLUDE_FROM_ALL)
  endif()
  if (NOT TARGET gtest)
    set(BUILD_GMOCK OFF)
    add_subdirectory(gtest EXCLUDE_FROM_ALL)
  endif()
  if (NOT TARGET gflags)
    add_subdirectory(gflags EXCLUDE_FROM_ALL)
  endif()
  if (NOT TARGET glog)
    add_subdirectory(glog EXCLUDE_FROM_ALL)
  endif()
  if (NOT TARGET magic_enum)
    add_subdirectory(magic_enum EXCLUDE_FROM_ALL)
  endif()
  if (NOT TARGET onnx)
    set(ONNX_ML ON)
    set(ONNX_GEN_PB_TYPE_STUBS OFF)
    add_definitions(-DONNX_ML=1)
    add_definitions(-DONNX_NAMESPACE=onnx)
    add_subdirectory(onnx EXCLUDE_FROM_ALL)
  endif()
endif()
